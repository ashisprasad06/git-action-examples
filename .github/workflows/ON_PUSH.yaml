name: ON PUSH
on:
  push:
    branches:
      - feature/**
      - Feature/**
      - FEATURE/**
      - main
jobs:
  on_push_to_feature:
    runs-on: ubuntu-latest
    if: contains(env.GITHUB_REF, 'feature')
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: main
      - name: create release branch
        run : |
          branch_name=$(echo ${GITHUB_REF#refs/heads/})
          echo "Will create release branch from master against which you will raise PR to deploy to preprod"
          echo "Creating the release branch from the feature branch $feature_branch_name"
          JIRA_TICKET_NUMBER=$(echo $feature_branch_name | awk -F"/" '{print $2}')
          RELEASE_BRANCH_NAME="release/$(echo $JIRA_TICKET_NUMBER)"
          if [ $(git ls-remote --heads origin $RELEASE_BRANCH_NAME|wc -l) == 0 ];
            then
                echo "The release branch $RELEASE_BRANCH_NAME does not exists in remote. Hence creating the new branch from master"
                git checkout -b $RELEASE_BRANCH_NAME
                git push origin $RELEASE_BRANCH_NAME
                echo "The new branch has been created. Please raise PR against this branch to merge changes to Pre-Prod"
          fi
  publish_release_from_main:
    runs-on: ubuntu-latest
    if: contains(env.GITHUB_REF, 'main')
    steps:
      - name: Create draft release
        id: create_draft_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish release
        uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ steps.create_draft_release.outputs.id }}
