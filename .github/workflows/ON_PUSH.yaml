name: ON PUSH
on:
  push:
    branches:
      - feature/**
      - preprod/**
      - main
jobs:
  runtime_variables:
    outputs:
      jira_ticket_numer: ${{ steps.runtime_variables.outputs.jira_ticket_numer }}
      feature_branch_name: ${{ steps.runtime_variables.outputs.feature_branch_name }}
      preprod_branch_name: ${{ steps.runtime_variables.outputs.preprod_branch_name }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Get runtime variables
        id: runtime_variables
        run: |
          branch_name=$(echo ${GITHUB_REF#refs/heads/})
          echo "::set-output name=feature_branch_name::$branch_name"

          JIRA_TICKET_NUMBER=$(echo $branch_name | awk -F"/" '{print $2}')
          echo "::set-output name=jira_ticket_numer::$JIRA_TICKET_NUMBER"

          RELEASE_BRANCH_NAME="preprod/$(echo $JIRA_TICKET_NUMBER)"
          echo "::set-output name=preprod_branch_name::$RELEASE_BRANCH_NAME"

  on_push_to_feature:
    needs: runtime_variables
    runs-on: ubuntu-latest
    if: contains(github.ref, 'feature')
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: create preprod branch
        run : |
          RELEASE_BRANCH_NAME=${{ needs.runtime_variables.outputs.preprod_branch_name }}
          echo "Checking $RELEASE_BRANCH_NAME existing or not"
          if [ $(git ls-remote --heads origin $RELEASE_BRANCH_NAME|wc -l) == 0 ];
            then
                echo "The release branch $RELEASE_BRANCH_NAME does not exists in remote. Hence creating the new branch from master"
                git checkout -b $RELEASE_BRANCH_NAME
                git push origin $RELEASE_BRANCH_NAME
                echo "The new branch has been created. Please raise PR against this branch to merge changes to Pre-Prod"
          fi

  on_push_to_main:
    needs: runtime_variables
    runs-on: ubuntu-latest
    if: contains(github.ref, 'main')
    steps:
      - name: Create draft release
        id: create_draft_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish release
        uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ steps.create_draft_release.outputs.id }}
